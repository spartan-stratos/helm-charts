apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spartan.fullname" . }}
  labels:
    {{- include "spartan.labels" . | nindent 4 }}
    tier: "application"
  annotations:
    {{- with .Values.deploymentAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy}}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spartan.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spartan.selectorLabels" . | nindent 8 }}
        tier: "application"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "spartan.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.datadog.enabled }}
      shareProcessNamespace: true
      {{- end }}
      containers:
        - name: {{ include "spartan.containerName" . }}
          {{- if and .Values.entrypoint .Values.entrypoint.command }}
          command:
            - {{ default "/bin/sh" .Values.entrypoint.shell }}
            - -c
            - {{ .Values.entrypoint.command }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort | default 80 }}
              protocol: TCP
          {{- if .Values.lifecycle.preStop.enabled }}
          lifecycle:
            preStop:
              exec:
                command: {{ toJson .Values.lifecycle.preStop.exec.command }}
          {{- end }}
          {{- if .Values.args | len }}
          args: {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe: {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            {{- if .Values.secret.asEnv.enabled }}
            - secretRef:
                name: {{ include "spartan.secretAsEnv" . }}
            {{- end }}
            {{- if .Values.secret.externalSecretEnv.enabled }}
            - secretRef:
                name: {{ .Values.secret.externalSecretEnv.name }}
            {{- end }}
            {{- if .Values.configMap.asEnv.enabled }}
            - configMapRef:
                name: {{ include "spartan.configMapAsEnv" . }}
            {{- end }}
            {{- if .Values.configMap.externalConfigMapEnv.enabled }}
            - configMapRef:
                name: {{ .Values.configMap.externalConfigMapEnv.name }}
            {{- end }}
          env:
          {{- if .Values.datadog.enabled }}
            - name: DD_KUBERNETES_KUBELET_NODENAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "true"
            - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
              value: "true"
            - name: DD_PROCESS_AGENT_ENABLED
              value: "true"
            - name: DD_CLUSTER_AGENT_ENABLED
              value: "true"
          {{- end }}
          {{- if .Values.extraEnvs }}
          {{- include "spartan.extraEnvs" (dict "lists" (list .Values.extraEnvs)) | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.secret.asFile.enabled }}
            - name: {{ include "spartan.secretAsFile" . }}
              readOnly: true
              mountPath: {{ .Values.secret.asFile.mountPath | quote }}
          {{- end }}
          {{- if .Values.secret.externalSecretFile.enabled }}
            - name: {{ .Values.secret.externalSecretFile.name }}
              readOnly: true
              mountPath: {{ .Values.secret.externalSecretFile.mountPath | quote }}
          {{- end }}
          {{- if .Values.configMap.asFile.enabled }}
            - name: {{ include "spartan.configMapAsFile" . }}
              readOnly: true
              mountPath: {{ .Values.configMap.asFile.mountPath | quote }}
          {{- end }}
          {{- if .Values.configMap.externalConfigMapFile.enabled }}
            - name: {{ .Values.configMap.externalConfigMapFile.name }}
              readOnly: true
              mountPath: {{ .Values.configMap.externalConfigMapFile.mountPath | quote }}
          {{- end }}
          {{- range .Values.sidecars }}
          {{- if .sharedVolume }}
            - name: sidecar-volume
              readOnly: false
              mountPath: {{ .sharedVolume.mountPath }}
              subPath: {{ .name }}
          {{- end }}
          {{- end }}
          {{- range .Values.persistence }}
            - name: {{ .claimName }}-volume
              mountPath: {{ .mountPath }}
          {{- end }}
          {{- range .Values.volumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
        {{- range $sidecar := .Values.sidecars }}
        {{ include "sidecar.template" (dict "sidecar" $sidecar "Values" $.Values "Chart" $.Chart "Release" $.Release) | indent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.secret.asFile.enabled }}
        - name: {{ include "spartan.secretAsFile" . }}
          secret:
            secretName: {{ include "spartan.secretAsFile" . }}
      {{- end }}
      {{- if .Values.secret.externalSecretFile.enabled }}
        - name: {{ .Values.secret.externalSecretFile.name }}
          secret:
            secretName: {{ .Values.secret.externalSecretFile.name }}
      {{- end }}
      {{- if .Values.configMap.asFile.enabled }}
        - name: {{ include "spartan.configMapAsFile" . }}
          configMap:
            name: {{ include "spartan.configMapAsFile" . }}
      {{- end }}
      {{- if .Values.configMap.externalConfigMapFile.enabled }}
        - name: {{ .Values.configMap.externalConfigMapFile.name }}
          configMap:
            name: {{ .Values.configMap.externalConfigMapFile.name }}
      {{- end }}
      {{- if .Values.sidecars }}
        - name: sidecar-volume
          emptyDir: {}
      {{- end }}
      {{- range .Values.persistence }}
        - name: {{ .claimName }}-volume
          persistentVolumeClaim:
            claimName: {{ .claimName }}
      {{- end }}
      {{- range .Values.volumes }}
        - name: {{ .name }}
        {{- if .hostPath }}
          hostPath:
            path: {{ .hostPath.path }}
          {{- if .hostPath.type }}
            type: {{ .hostPath.type }}
          {{- end }}
        {{- end }}
        {{- if .emptyDir }}
          emptyDir: {}
        {{- end }}
        {{- if .configMap }}
          configMap:
            name: {{ .configMap.name }}
        {{- end }}
        {{- if .secret }}
          secret:
            secretName: {{ .secret.secretName }}
        {{- end }}
        {{- if .persistentVolumeClaim }}
          persistentVolumeClaim:
            claimName: {{ .persistentVolumeClaim.claimName }}
        {{- end }}
      {{- end }}
